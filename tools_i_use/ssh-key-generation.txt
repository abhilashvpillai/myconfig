my pass phrase - iamkochumon
*********************************************************************************************************************************

ls -al ~/.ssh
# Lists the files in your .ssh directory, if they exist

---------------------------------------------------------------------------------------------------------------------------------

ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
# Creates a new ssh key, using the provided email as a label
# Generating public/private rsa key pair.


---------------------------------------------------------------------------------------------------------------------------------

Ensure ssh-agent is enabled:

If you are using Git Bash, turn on ssh-agent:

# start the ssh-agent in the background
ssh-agent -s
# Agent pid 59566

If you are using another terminal prompt, such as msysgit, turn on ssh-agent:

# start the ssh-agent in the background
eval $(ssh-agent -s)
# Agent pid 59566

---------------------------------------------------------------------------------------------------------------------------------

Add your SSH key to the ssh-agent:

ssh-add ~/.ssh/id_rsa


---------------------------------------------------------------------------------------------------------------------------------


Copy the SSH key to your clipboard. If your key is named id_dsa.pub, id_ecdsa.pub or id_ed25519.pub, then change 
the filename below from id_rsa.pub to the one that matches your key:

clip < ~/.ssh/id_rsa.pub
# Copies the contents of the id_rsa.pub file to your clipboard

Warning: It's important to copy the key exactly without adding newlines or whitespace.

---------------------------------------------------------------------------------------------------------------------------------

Test the connection

To make sure everything is working, you'll now try to SSH into GitHub. When you do this, you will be asked to authenticate 
this action using your password, which is the SSH key passphrase you created earlier.

Open Git Bash and enter:

ssh -T git@github.com
# Attempts to ssh to GitHub

You may see this warning:

# The authenticity of host 'github.com (207.97.227.239)' can't be established.
# RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
# Are you sure you want to continue connecting (yes/no)?

Verify the fingerprint in the message you see matches the following message, then type yes:

# Hi username! You've successfully authenticated, but GitHub does not
# provide shell access.

If the username in the message is yours, you've successfully set up your SSH key!

---------------------------------------------------------------------------------------------------------------------------------

Caching your GitHub password in Git


If you're cloning GitHub repositories using HTTPS, you can use a credential helper to tell Git to remember your GitHub 
username and password every time it talks to GitHub.

If you clone GitHub repositories using SSH, then you authenticate using SSH keys instead of a username and password. 
For help setting up an SSH connection, see Generating SSH Keys.

    Tip: You need Git 1.7.10 or newer to use the credential helper.

The credential helper is included with GitHub Desktop. The app also provides a Git shell so you won't ever need to install 
and configure Git manually. For more information, see "Getting Started with GitHub Desktop."

If you prefer working with the command line, you can also install a native Git shell, such as msysgit. With msysgit, 
running the following in the command line will store your credentials:

    git config --global credential.helper wincred

---------------------------------------------------------------------------------------------------------------------------------
Switching remote URLs from HTTPS to SSH

Open Terminal (for Mac and Linux users) or the command prompt (for Windows users).

Change the current working directory to your local project.

List your existing remotes in order to get the name of the remote you want to change.

git remote -v
# origin  https://github.com/USERNAME/REPOSITORY.git (fetch)
# origin  https://github.com/USERNAME/REPOSITORY.git (push)

Change your remote's URL from HTTPS to SSH with the git remote set-url command.

git remote set-url origin git@github.com:USERNAME/OTHERREPOSITORY.git

Verify that the remote URL has changed.

git remote -v
# Verify new remote URL
# origin  git@github.com:USERNAME/OTHERREPOSITORY.git (fetch)
# origin  git@github.com:USERNAME/OTHERREPOSITORY.git (push)

---------------------------------------------------------------------------------------------------------------------------------

Troubleshooting

You may encounter these errors when trying to changing a remote.
No such remote '[name]'

This error means that the remote you tried to change doesn't exist:

    git remote set-url sofake https://github.com/octocat/Spoon-Knife
    # fatal: No such remote 'sofake'

Check that you've correctly typed the remote name.

---------------------------------------------------------------------------------------------------------------------------------

